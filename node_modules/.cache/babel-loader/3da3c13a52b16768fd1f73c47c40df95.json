{"ast":null,"code":"var _jsxFileName = \"D:\\\\7thSemester\\\\PRJ666\\\\PRJ566-master\\\\src\\\\components\\\\RegisterForm.jsx\";\nimport { isEmpty as _isEmpty } from 'underscore';\nimport React, { Component } from 'react';\nvar Register = createClass({\n  getInitialState: function () {\n    return {\n      firstName: null,\n      lastName: null,\n      birthDate: null,\n      email: null,\n      phoneNumber: null,\n      password: null,\n      confirmPassword: null,\n      forbiddenWords: [\"password\", \"user\", \"username\"]\n    };\n  },\n  handlePasswordInput: function (event) {\n    if (!_isEmpty(this.state.confirmPassword)) {\n      this.refs.passwordConfirm.isValid();\n    }\n\n    this.refs.passwordConfirm.hideError();\n    this.setState({\n      password: event.target.value\n    });\n  },\n  handleConfirmPasswordInput: function (event) {\n    this.setState({\n      confirmPassword: event.target.value\n    });\n  },\n  saveAndContinue: function (e) {\n    e.preventDefault();\n    var canProceed = this.validateEmail(this.state.email) && this.refs.password.isValid() && this.refs.passwordConfirm.isValid();\n\n    if (canProceed) {\n      var data = {\n        email: this.state.email\n      };\n      alert('Thanks.');\n    } else {\n      this.refs.email.isValid();\n      this.refs.state.isValid();\n      this.refs.firstName.isValid();\n      this.refs.password.isValid();\n      this.refs.passwordConfirm.isValid();\n    }\n  },\n  isConfirmedPassword: function (event) {\n    return event == this.state.password;\n  },\n  handleFirstInput: function (event) {\n    this.setState({\n      firstName: event.target.value\n    });\n  },\n  handleLastInput: function (event) {\n    this.setState({\n      lastName: event.target.value\n    });\n  },\n  handleBirthDateInput: function (event) {\n    this.setState({\n      birthDate: event.target.value\n    });\n  },\n  handleEmailInput: function (event) {\n    this.setState({\n      email: event.target.value\n    });\n  },\n  handlePhoneNumberInput: function (event) {\n    this.setState({\n      phoneNumber: event.target.value\n    });\n  },\n  validateEmail: function (event) {\n    // regex from http://stackoverflow.com/questions/46155/validate-email-address-in-javascript\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(event);\n  },\n  isEmpty: function (value) {\n    return !_isEmpty(value);\n  },\n  render: function () {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register_screen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create_account_form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, \"Create account\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.saveAndContinue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      text: \"First Name\",\n      ref: \"firstName\",\n      validate: this.isEmpty,\n      value: this.state.firstName,\n      onChange: this.handleFirstInput,\n      emptyMessage: \"First name can't be empty\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      text: \"Last Name\",\n      ref: \"lastName\",\n      validate: this.isEmpty,\n      value: this.state.lastName,\n      onChange: this.handleLastInput,\n      emptyMessage: \"Last name can't be empty\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      text: \"Date of Birth\",\n      ref: \"birthDate\",\n      validate: this.isEmpty,\n      value: this.state.birthDate,\n      onChange: this.handleBirthDateInput,\n      emptyMessage: \"Date of birth can't be empty\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      text: \"Email Address\",\n      ref: \"email\",\n      type: \"text\",\n      defaultValue: this.state.email,\n      validate: this.validateEmail,\n      value: this.state.email,\n      onChange: this.handleEmailInput,\n      errorMessage: \"Email is invalid\",\n      emptyMessage: \"Email can't be empty\",\n      errorVisible: this.state.showEmailError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      text: \"Phone Number\",\n      ref: \"phoneNumber\",\n      validate: this.isEmpty,\n      value: this.state.phoneNumber,\n      onChange: this.handlePhoneNumberInput,\n      emptyMessage: \"Phone number can't be empty\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      text: \"Password\",\n      type: \"password\",\n      ref: \"password\",\n      validator: \"true\",\n      minCharacters: \"8\",\n      requireCapitals: \"1\",\n      requireNumbers: \"1\",\n      forbiddenWords: this.state.forbiddenWords,\n      value: this.state.passsword,\n      emptyMessage: \"Password is invalid\",\n      onChange: this.handlePasswordInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      text: \"Confirm password\",\n      ref: \"passwordConfirm\",\n      type: \"password\",\n      validate: this.isConfirmedPassword,\n      value: this.state.confirmPassword,\n      onChange: this.handleConfirmPasswordInput,\n      emptyMessage: \"Please confirm your password\",\n      errorMessage: \"Passwords don't match\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"button button_wide\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, \"Submit\"))));\n  }\n});\nexport default Register;","map":{"version":3,"sources":["D:/7thSemester/PRJ666/PRJ566-master/src/components/RegisterForm.jsx"],"names":["isEmpty","_isEmpty","React","Component","Register","createClass","getInitialState","firstName","lastName","birthDate","email","phoneNumber","password","confirmPassword","forbiddenWords","handlePasswordInput","event","state","refs","passwordConfirm","isValid","hideError","setState","target","value","handleConfirmPasswordInput","saveAndContinue","e","preventDefault","canProceed","validateEmail","data","alert","isConfirmedPassword","handleFirstInput","handleLastInput","handleBirthDateInput","handleEmailInput","handlePhoneNumberInput","re","test","render","showEmailError","passsword"],"mappings":"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","sourcesContent":["\r\n\r\nimport { isEmpty as _isEmpty } from 'underscore';\r\nimport React, { Component }  from 'react';\r\n\r\n\r\nvar Register = createClass({\r\n  getInitialState: function () {\r\n    return {\r\n      firstName:null,\r\n      lastName: null,\r\n      birthDate:null,\r\n      email:null,\r\n      phoneNumber:null,\r\n      password: null,\r\n      confirmPassword: null,\r\n      forbiddenWords: [\"password\", \"user\", \"username\"]\r\n    }\r\n  },\r\n\r\n  handlePasswordInput: function (event) {\r\n    if(!_isEmpty(this.state.confirmPassword)){\r\n      this.refs.passwordConfirm.isValid();\r\n    }\r\n    this.refs.passwordConfirm.hideError();\r\n    this.setState({\r\n      password: event.target.value\r\n    });\r\n  },\r\n\r\n  handleConfirmPasswordInput: function (event) {\r\n    this.setState({\r\n      confirmPassword: event.target.value\r\n    });\r\n  },\r\n\r\n  saveAndContinue: function (e) {\r\n    e.preventDefault();\r\n\r\n    var canProceed = this.validateEmail(this.state.email) \r\n\r\n        && this.refs.password.isValid()\r\n        && this.refs.passwordConfirm.isValid();\r\n\r\n    if(canProceed) {\r\n      var data = {\r\n        email: this.state.email\r\n      }\r\n      alert('Thanks.');\r\n    } else {\r\n      this.refs.email.isValid();\r\n      this.refs.state.isValid();\r\n      this.refs.firstName.isValid();\r\n      this.refs.password.isValid();\r\n      this.refs.passwordConfirm.isValid();\r\n    }\r\n  },\r\n\r\n  isConfirmedPassword: function (event) {\r\n    return (event == this.state.password)\r\n  },\r\n\r\n  handleFirstInput: function(event) {\r\n    this.setState({\r\n      firstName: event.target.value\r\n    })\r\n  },\r\n  handleLastInput: function(event) {\r\n    this.setState({\r\n      lastName: event.target.value\r\n    })\r\n  },\r\n\r\n  handleBirthDateInput: function(event) {\r\n    this.setState({\r\n      birthDate: event.target.value\r\n    })\r\n  },\r\n\r\n  handleEmailInput: function(event){\r\n    this.setState({\r\n      email: event.target.value\r\n    });\r\n  },\r\n\r\n  handlePhoneNumberInput: function(event){\r\n    this.setState({\r\n     phoneNumber: event.target.value\r\n    });\r\n  },\r\n\r\n  validateEmail: function (event) {\r\n    // regex from http://stackoverflow.com/questions/46155/validate-email-address-in-javascript\r\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(event);\r\n  },\r\n\r\n  isEmpty: function (value) {\r\n    return !_isEmpty(value);\r\n  },\r\n\r\n\r\n  render: function() {\r\n    return (\r\n      <div className=\"register_screen\">\r\n\r\n        <div className=\"create_account_form\">\r\n          <h1>Create account</h1>\r\n          \r\n          <form onSubmit={this.saveAndContinue}>\r\n\r\n            <div \r\n              text=\"First Name\" \r\n              ref=\"firstName\"\r\n              validate={this.isEmpty}\r\n              value={this.state.firstName}\r\n              onChange={this.handleFirstInput} \r\n              emptyMessage=\"First name can't be empty\"\r\n            /> \r\n\r\n            <div \r\n              text=\"Last Name\" \r\n              ref=\"lastName\"\r\n              validate={this.isEmpty}\r\n              value={this.state.lastName}\r\n              onChange={this.handleLastInput} \r\n              emptyMessage=\"Last name can't be empty\"\r\n            /> \r\n            <div\r\n              text=\"Date of Birth\" \r\n              ref=\"birthDate\"\r\n              validate={this.isEmpty}\r\n              value={this.state.birthDate}\r\n              onChange={this.handleBirthDateInput} \r\n              emptyMessage=\"Date of birth can't be empty\"\r\n            /> \r\n\r\n            <div\r\n              text=\"Email Address\" \r\n              ref=\"email\"\r\n              type=\"text\"\r\n              defaultValue={this.state.email} \r\n              validate={this.validateEmail}\r\n              value={this.state.email}\r\n              onChange={this.handleEmailInput} \r\n              errorMessage=\"Email is invalid\"\r\n              emptyMessage=\"Email can't be empty\"\r\n              errorVisible={this.state.showEmailError}\r\n            />\r\n\r\n            <div \r\n              text=\"Phone Number\" \r\n              ref=\"phoneNumber\"\r\n              validate={this.isEmpty}\r\n              value={this.state.phoneNumber}\r\n              onChange={this.handlePhoneNumberInput} \r\n              emptyMessage=\"Phone number can't be empty\"\r\n            /> \r\n\r\n            <div\r\n              text=\"Password\" \r\n              type=\"password\"\r\n              ref=\"password\"\r\n              validator=\"true\"\r\n              minCharacters=\"8\"\r\n              requireCapitals=\"1\"\r\n              requireNumbers=\"1\"\r\n              forbiddenWords={this.state.forbiddenWords}\r\n              value={this.state.passsword}\r\n              emptyMessage=\"Password is invalid\"\r\n              onChange={this.handlePasswordInput} \r\n            /> \r\n\r\n            <div\r\n              text=\"Confirm password\" \r\n              ref=\"passwordConfirm\"\r\n              type=\"password\"\r\n              validate={this.isConfirmedPassword}\r\n              value={this.state.confirmPassword}\r\n              onChange={this.handleConfirmPasswordInput} \r\n              emptyMessage=\"Please confirm your password\"\r\n              errorMessage=\"Passwords don't match\"\r\n            /> \r\n\r\n            <button \r\n              type=\"submit\" \r\n              className=\"button button_wide\">\r\n              Submit\r\n            </button>\r\n\r\n          </form>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n    \r\n});\r\n    \r\nexport default Register;"]},"metadata":{},"sourceType":"module"}