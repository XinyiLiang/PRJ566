{"ast":null,"code":"var _jsxFileName = \"D:\\\\7thSemester\\\\PRJ666\\\\PRJ566-master\\\\src\\\\components\\\\Input.js\";\n\n/** @jsx React.DOM */\nvar React = require('react/addons');\n\nvar _ = require('underscore');\n\nvar Icon = require('./Icon.js');\n\nvar InputError = require('./InputError.js');\n\nvar PasswordValidator = require('./PasswordValidator.js');\n\nvar cx = React.addons.classSet;\nvar Input = React.createClass({\n  displayName: \"Input\",\n  getInitialState: function () {\n    var valid = this.props.isValid && this.props.isValid() || true;\n    return {\n      valid: valid,\n      empty: _.isEmpty(this.props.value),\n      focus: false,\n      value: null,\n      iconsVisible: !this.props.validator,\n      errorMessage: this.props.emptyMessage,\n      validator: this.props.validator,\n      validatorVisible: false,\n      type: this.props.type,\n      minCharacters: this.props.minCharacters,\n      requireCapitals: this.props.requireCapitals,\n      requireNumbers: this.props.requireNumbers,\n      forbiddenWords: this.props.forbiddenWords,\n      isValidatorValid: {\n        minChars: false,\n        capitalLetters: false,\n        numbers: false,\n        words: false,\n        all: false\n      },\n      allValidatorValid: false\n    };\n  },\n  handleChange: function (event) {\n    this.setState({\n      value: event.target.value,\n      empty: _.isEmpty(event.target.value)\n    });\n\n    if (this.props.validator) {\n      this.checkRules(event.target.value);\n    } // call input's validation method\n\n\n    if (this.props.validate) {\n      this.validateInput(event.target.value);\n    } // call onChange method on the parent component for updating it's state\n\n\n    if (this.props.onChange) {\n      this.props.onChange(event);\n    }\n  },\n  validateInput: function (value) {\n    // trigger custom validation method in the parent component\n    if (this.props.validate && this.props.validate(value)) {\n      this.setState({\n        valid: true,\n        errorVisible: false\n      });\n    } else {\n      this.setState({\n        valid: false,\n        errorMessage: !_.isEmpty(value) ? this.props.errorMessage : this.props.emptyMessage\n      });\n    }\n  },\n  componentWillReceiveProps: function (newProps) {\n    // perform update only when new value exists and not empty  \n    if (newProps.value) {\n      if (!_.isUndefined(newProps.value) && newProps.value.length > 0) {\n        if (this.props.validate) {\n          this.validateInput(newProps.value);\n        }\n\n        this.setState({\n          value: newProps.value,\n          empty: _.isEmpty(newProps.value)\n        });\n      }\n    }\n  },\n  isValid: function () {\n    if (this.props.validate) {\n      if (_.isEmpty(this.state.value) || !this.props.validate(this.state.value)) {\n        this.setState({\n          valid: false,\n          errorVisible: true\n        });\n      }\n    }\n\n    return this.state.valid;\n  },\n  handleFocus: function () {\n    this.setState({\n      focus: true,\n      validatorVisible: true\n    }); // hide error when validator is active\n\n    if (this.props.validator) {\n      this.setState({\n        errorVisible: false\n      });\n    }\n  },\n  handleBlur: function () {\n    this.setState({\n      focus: false,\n      errorVisible: !this.state.valid,\n      validatorVisible: false\n    });\n  },\n  mouseEnterError: function () {\n    this.setState({\n      errorVisible: true\n    });\n  },\n  hideError: function () {\n    this.setState({\n      errorVisible: false,\n      validatorVisible: false\n    });\n  },\n  // validator function\n  checkRules: function (value) {\n    var validData = {\n      minChars: !_.isEmpty(value) ? value.length >= parseInt(this.state.minCharacters) : false,\n      capitalLetters: !_.isEmpty(value) ? this.countCapitals(value) : false,\n      numbers: !_.isEmpty(value) ? this.countNumbers(value) > 0 : false,\n      words: !_.isEmpty(value) ? !this.checkWords(value) : false\n    };\n    var allValid = validData.minChars && validData.capitalLetters && validData.numbers && validData.words;\n    this.setState({\n      isValidatorValid: validData,\n      allValidatorValid: allValid,\n      valid: allValid\n    });\n  },\n  countCapitals: function (value) {\n    var str = value;\n    return str.replace(/[^A-Z]/g, \"\").length;\n  },\n  countNumbers: function (value) {\n    return /\\d/.test(value);\n  },\n  checkWords: function (value) {\n    return _.some(this.state.forbiddenWords, function (word) {\n      var matched = word === value ? true : \"\";\n      return matched;\n    });\n  },\n  render: function () {\n    var inputGroupClasses = cx({\n      'input_group': true,\n      'input_valid': this.state.valid,\n      'input_error': !this.state.valid,\n      'input_empty': this.state.empty,\n      'input_hasValue': !this.state.empty,\n      'input_focused': this.state.focus,\n      'input_unfocused': !this.state.focus\n    });\n    var validator;\n\n    if (this.state.validator) {\n      validator = React.DOM(PasswordValidator, {\n        ref: \"passwordValidator\",\n        visible: this.state.validatorVisible,\n        name: this.props.text,\n        value: this.state.value,\n        validData: this.state.isValidatorValid,\n        valid: this.state.allValidatorValid,\n        forbiddenWords: this.state.forbiddenWords,\n        minCharacters: this.props.minCharacters,\n        requireCapitals: this.props.requireCapitals,\n        requireNumbers: this.props.requireNumbers,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return React.DOM(\"div\", {\n      className: inputGroupClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 7\n      }\n    }, React.DOM(\"label\", {\n      className: \"input_label\",\n      htmlFor: this.props.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }\n    }, React.DOM(\"span\", {\n      className: \"label_text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }\n    }, this.props.text)), React.DOM(\"input\", Object.assign({}, this.props, {\n      placeholder: this.props.placeholder,\n      className: \"input\",\n      id: this.props.text,\n      defaultValue: this.props.defaultValue,\n      value: this.state.value,\n      onChange: this.handleChange,\n      onFocus: this.handleFocus,\n      onBlur: this.handleBlur,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }\n    })), React.DOM(InputError, {\n      visible: this.state.errorVisible,\n      errorMessage: this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }\n    }), React.DOM(\"div\", {\n      className: \"validationIcons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }\n    }, React.DOM(\"i\", {\n      className: \"input_error_icon\",\n      onMouseEnter: this.mouseEnterError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }\n    }, \" \", React.DOM(Icon, {\n      type: \"circle_error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 80\n      }\n    }), \" \"), React.DOM(\"i\", {\n      className: \"input_valid_icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }\n    }, \" \", React.DOM(Icon, {\n      type: \"circle_tick\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 44\n      }\n    }), \" \")), validator);\n  }\n});\nmodule.exports = Input;","map":{"version":3,"sources":["D:/7thSemester/PRJ666/PRJ566-master/src/components/Input.js"],"names":["React","require","_","Icon","InputError","PasswordValidator","cx","addons","classSet","Input","createClass","getInitialState","valid","props","isValid","empty","isEmpty","value","focus","iconsVisible","validator","errorMessage","emptyMessage","validatorVisible","type","minCharacters","requireCapitals","requireNumbers","forbiddenWords","isValidatorValid","minChars","capitalLetters","numbers","words","all","allValidatorValid","handleChange","event","setState","target","checkRules","validate","validateInput","onChange","errorVisible","componentWillReceiveProps","newProps","isUndefined","length","state","handleFocus","handleBlur","mouseEnterError","hideError","validData","parseInt","countCapitals","countNumbers","checkWords","allValid","str","replace","test","some","word","matched","render","inputGroupClasses","text","placeholder","defaultValue","module","exports"],"mappings":";;AAAA;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AACA,IAAIC,CAAC,GAAGD,OAAO,CAAC,YAAD,CAAf;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,WAAD,CAAlB;;AACA,IAAIG,UAAU,GAAGH,OAAO,CAAC,iBAAD,CAAxB;;AACA,IAAII,iBAAiB,GAAGJ,OAAO,CAAC,wBAAD,CAA/B;;AAEA,IAAIK,EAAE,GAAGN,KAAK,CAACO,MAAN,CAAaC,QAAtB;AAGA,IAAIC,KAAK,GAAGT,KAAK,CAACU,WAAN,CAAkB;AAAA;AAE5BC,EAAAA,eAAe,EAAE,YAAU;AACzB,QAAIC,KAAK,GAAI,KAAKC,KAAL,CAAWC,OAAX,IAAsB,KAAKD,KAAL,CAAWC,OAAX,EAAvB,IAAgD,IAA5D;AAEA,WAAO;AACLF,MAAAA,KAAK,EAAEA,KADF;AAELG,MAAAA,KAAK,EAAEb,CAAC,CAACc,OAAF,CAAU,KAAKH,KAAL,CAAWI,KAArB,CAFF;AAGLC,MAAAA,KAAK,EAAE,KAHF;AAILD,MAAAA,KAAK,EAAE,IAJF;AAKLE,MAAAA,YAAY,EAAE,CAAC,KAAKN,KAAL,CAAWO,SALrB;AAMLC,MAAAA,YAAY,EAAE,KAAKR,KAAL,CAAWS,YANpB;AAOLF,MAAAA,SAAS,EAAE,KAAKP,KAAL,CAAWO,SAPjB;AAQLG,MAAAA,gBAAgB,EAAE,KARb;AASLC,MAAAA,IAAI,EAAE,KAAKX,KAAL,CAAWW,IATZ;AAULC,MAAAA,aAAa,EAAE,KAAKZ,KAAL,CAAWY,aAVrB;AAWLC,MAAAA,eAAe,EAAE,KAAKb,KAAL,CAAWa,eAXvB;AAYLC,MAAAA,cAAc,EAAE,KAAKd,KAAL,CAAWc,cAZtB;AAaLC,MAAAA,cAAc,EAAE,KAAKf,KAAL,CAAWe,cAbtB;AAcLC,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,QAAQ,EAAE,KADM;AAEhBC,QAAAA,cAAc,EAAE,KAFA;AAGhBC,QAAAA,OAAO,EAAE,KAHO;AAIhBC,QAAAA,KAAK,EAAE,KAJS;AAKhBC,QAAAA,GAAG,EAAE;AALW,OAdb;AAqBLC,MAAAA,iBAAiB,EAAE;AArBd,KAAP;AAuBD,GA5B2B;AA8B5BC,EAAAA,YAAY,EAAE,UAASC,KAAT,EAAe;AAC3B,SAAKC,QAAL,CAAc;AACZrB,MAAAA,KAAK,EAAEoB,KAAK,CAACE,MAAN,CAAatB,KADR;AAEZF,MAAAA,KAAK,EAAEb,CAAC,CAACc,OAAF,CAAUqB,KAAK,CAACE,MAAN,CAAatB,KAAvB;AAFK,KAAd;;AAKA,QAAG,KAAKJ,KAAL,CAAWO,SAAd,EAAyB;AACvB,WAAKoB,UAAL,CAAgBH,KAAK,CAACE,MAAN,CAAatB,KAA7B;AACD,KAR0B,CAU3B;;;AACA,QAAG,KAAKJ,KAAL,CAAW4B,QAAd,EAAwB;AACtB,WAAKC,aAAL,CAAmBL,KAAK,CAACE,MAAN,CAAatB,KAAhC;AACD,KAb0B,CAe3B;;;AACA,QAAG,KAAKJ,KAAL,CAAW8B,QAAd,EAAwB;AACtB,WAAK9B,KAAL,CAAW8B,QAAX,CAAoBN,KAApB;AACD;AACF,GAjD2B;AAmD5BK,EAAAA,aAAa,EAAE,UAAUzB,KAAV,EAAiB;AAC9B;AACA,QAAG,KAAKJ,KAAL,CAAW4B,QAAX,IAAuB,KAAK5B,KAAL,CAAW4B,QAAX,CAAoBxB,KAApB,CAA1B,EAAqD;AACnD,WAAKqB,QAAL,CAAc;AACZ1B,QAAAA,KAAK,EAAE,IADK;AAEZgC,QAAAA,YAAY,EAAE;AAFF,OAAd;AAID,KALD,MAKO;AACL,WAAKN,QAAL,CAAc;AACZ1B,QAAAA,KAAK,EAAE,KADK;AAEZS,QAAAA,YAAY,EAAE,CAACnB,CAAC,CAACc,OAAF,CAAUC,KAAV,CAAD,GAAoB,KAAKJ,KAAL,CAAWQ,YAA/B,GAA8C,KAAKR,KAAL,CAAWS;AAF3D,OAAd;AAID;AAEF,GAjE2B;AAmE5BuB,EAAAA,yBAAyB,EAAE,UAAUC,QAAV,EAAoB;AAC7C;AACA,QAAGA,QAAQ,CAAC7B,KAAZ,EAAmB;AACjB,UAAG,CAACf,CAAC,CAAC6C,WAAF,CAAcD,QAAQ,CAAC7B,KAAvB,CAAD,IAAkC6B,QAAQ,CAAC7B,KAAT,CAAe+B,MAAf,GAAwB,CAA7D,EAAgE;AAC9D,YAAG,KAAKnC,KAAL,CAAW4B,QAAd,EAAwB;AACtB,eAAKC,aAAL,CAAmBI,QAAQ,CAAC7B,KAA5B;AACD;;AACD,aAAKqB,QAAL,CAAc;AACZrB,UAAAA,KAAK,EAAE6B,QAAQ,CAAC7B,KADJ;AAEZF,UAAAA,KAAK,EAAEb,CAAC,CAACc,OAAF,CAAU8B,QAAQ,CAAC7B,KAAnB;AAFK,SAAd;AAID;AACF;AACF,GAhF2B;AAkF5BH,EAAAA,OAAO,EAAE,YAAY;AACnB,QAAG,KAAKD,KAAL,CAAW4B,QAAd,EAAwB;AACtB,UAAGvC,CAAC,CAACc,OAAF,CAAU,KAAKiC,KAAL,CAAWhC,KAArB,KAA+B,CAAC,KAAKJ,KAAL,CAAW4B,QAAX,CAAoB,KAAKQ,KAAL,CAAWhC,KAA/B,CAAnC,EAA0E;AACxE,aAAKqB,QAAL,CAAc;AACZ1B,UAAAA,KAAK,EAAE,KADK;AAEZgC,UAAAA,YAAY,EAAE;AAFF,SAAd;AAID;AACF;;AAED,WAAO,KAAKK,KAAL,CAAWrC,KAAlB;AACD,GA7F2B;AA+F5BsC,EAAAA,WAAW,EAAE,YAAY;AACvB,SAAKZ,QAAL,CAAc;AACZpB,MAAAA,KAAK,EAAE,IADK;AAEZK,MAAAA,gBAAgB,EAAE;AAFN,KAAd,EADuB,CAMvB;;AACA,QAAG,KAAKV,KAAL,CAAWO,SAAd,EAAyB;AACvB,WAAKkB,QAAL,CAAc;AACZM,QAAAA,YAAY,EAAE;AADF,OAAd;AAGD;AACF,GA3G2B;AA6G5BO,EAAAA,UAAU,EAAE,YAAY;AACtB,SAAKb,QAAL,CAAc;AACZpB,MAAAA,KAAK,EAAE,KADK;AAEZ0B,MAAAA,YAAY,EAAE,CAAC,KAAKK,KAAL,CAAWrC,KAFd;AAGZW,MAAAA,gBAAgB,EAAE;AAHN,KAAd;AAKD,GAnH2B;AAqH5B6B,EAAAA,eAAe,EAAE,YAAY;AAC3B,SAAKd,QAAL,CAAc;AACZM,MAAAA,YAAY,EAAE;AADF,KAAd;AAGD,GAzH2B;AA2H5BS,EAAAA,SAAS,EAAE,YAAY;AACrB,SAAKf,QAAL,CAAc;AACZM,MAAAA,YAAY,EAAE,KADF;AAEZrB,MAAAA,gBAAgB,EAAE;AAFN,KAAd;AAID,GAhI2B;AAkI5B;AACAiB,EAAAA,UAAU,EAAE,UAASvB,KAAT,EAAgB;AAC1B,QAAIqC,SAAS,GAAG;AACdxB,MAAAA,QAAQ,EAAE,CAAC5B,CAAC,CAACc,OAAF,CAAUC,KAAV,CAAD,GAAoBA,KAAK,CAAC+B,MAAN,IAAgBO,QAAQ,CAAC,KAAKN,KAAL,CAAWxB,aAAZ,CAA5C,GAAwE,KADpE;AAEdM,MAAAA,cAAc,EAAE,CAAC7B,CAAC,CAACc,OAAF,CAAUC,KAAV,CAAD,GAAoB,KAAKuC,aAAL,CAAmBvC,KAAnB,CAApB,GAA+C,KAFjD;AAGde,MAAAA,OAAO,EAAE,CAAC9B,CAAC,CAACc,OAAF,CAAUC,KAAV,CAAD,GAAoB,KAAKwC,YAAL,CAAkBxC,KAAlB,IAA2B,CAA/C,GAAmD,KAH9C;AAIdgB,MAAAA,KAAK,EAAE,CAAC/B,CAAC,CAACc,OAAF,CAAUC,KAAV,CAAD,GAAoB,CAAC,KAAKyC,UAAL,CAAgBzC,KAAhB,CAArB,GAA8C;AAJvC,KAAhB;AAMA,QAAI0C,QAAQ,GAAIL,SAAS,CAACxB,QAAV,IAAsBwB,SAAS,CAACvB,cAAhC,IAAkDuB,SAAS,CAACtB,OAA5D,IAAuEsB,SAAS,CAACrB,KAAjG;AAEA,SAAKK,QAAL,CAAc;AACZT,MAAAA,gBAAgB,EAAEyB,SADN;AAEZnB,MAAAA,iBAAiB,EAAEwB,QAFP;AAGZ/C,MAAAA,KAAK,EAAE+C;AAHK,KAAd;AAKD,GAjJ2B;AAmJ5BH,EAAAA,aAAa,EAAE,UAASvC,KAAT,EAAgB;AAC7B,QAAI2C,GAAG,GAAG3C,KAAV;AACA,WAAO2C,GAAG,CAACC,OAAJ,CAAY,SAAZ,EAAuB,EAAvB,EAA2Bb,MAAlC;AACD,GAtJ2B;AAwJ5BS,EAAAA,YAAY,EAAE,UAASxC,KAAT,EAAgB;AAC5B,WAAO,KAAK6C,IAAL,CAAU7C,KAAV,CAAP;AACD,GA1J2B;AA4J5ByC,EAAAA,UAAU,EAAE,UAASzC,KAAT,EAAgB;AAC1B,WAAQf,CAAC,CAAC6D,IAAF,CAAO,KAAKd,KAAL,CAAWrB,cAAlB,EAAkC,UAAUoC,IAAV,EAAgB;AACxD,UAAIC,OAAO,GAAID,IAAI,KAAK/C,KAAV,GAAmB,IAAnB,GAA0B,EAAxC;AACA,aAAOgD,OAAP;AACD,KAHO,CAAR;AAID,GAjK2B;AAmK5BC,EAAAA,MAAM,EAAE,YAAU;AAEhB,QAAIC,iBAAiB,GAAG7D,EAAE,CAAC;AACzB,qBAAmB,IADM;AAEzB,qBAAmB,KAAK2C,KAAL,CAAWrC,KAFL;AAGzB,qBAAmB,CAAC,KAAKqC,KAAL,CAAWrC,KAHN;AAIzB,qBAAmB,KAAKqC,KAAL,CAAWlC,KAJL;AAKzB,wBAAmB,CAAC,KAAKkC,KAAL,CAAWlC,KALN;AAMzB,uBAAmB,KAAKkC,KAAL,CAAW/B,KANL;AAOzB,yBAAmB,CAAC,KAAK+B,KAAL,CAAW/B;AAPN,KAAD,CAA1B;AAUA,QAAIE,SAAJ;;AAEA,QAAG,KAAK6B,KAAL,CAAW7B,SAAd,EAAyB;AACvBA,MAAAA,SAAS,GACP,UAAC,iBAAD;AACE,QAAA,GAAG,EAAC,mBADN;AAEE,QAAA,OAAO,EAAE,KAAK6B,KAAL,CAAW1B,gBAFtB;AAGE,QAAA,IAAI,EAAE,KAAKV,KAAL,CAAWuD,IAHnB;AAIE,QAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWhC,KAJpB;AAKE,QAAA,SAAS,EAAE,KAAKgC,KAAL,CAAWpB,gBALxB;AAME,QAAA,KAAK,EAAE,KAAKoB,KAAL,CAAWd,iBANpB;AAOE,QAAA,cAAc,EAAE,KAAKc,KAAL,CAAWrB,cAP7B;AAQE,QAAA,aAAa,EAAE,KAAKf,KAAL,CAAWY,aAR5B;AASE,QAAA,eAAe,EAAE,KAAKZ,KAAL,CAAWa,eAT9B;AAUE,QAAA,cAAc,EAAE,KAAKb,KAAL,CAAWc,cAV7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAaD;;AAED,WACE;AAAK,MAAA,SAAS,EAAEwC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAO,MAAA,SAAS,EAAC,aAAjB;AAA+B,MAAA,OAAO,EAAE,KAAKtD,KAAL,CAAWuD,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B,KAAKvD,KAAL,CAAWuD,IAAzC,CADF,CAFF,EAME,qCACM,KAAKvD,KADX;AAEE,MAAA,WAAW,EAAE,KAAKA,KAAL,CAAWwD,WAF1B;AAGE,MAAA,SAAS,EAAC,OAHZ;AAIE,MAAA,EAAE,EAAE,KAAKxD,KAAL,CAAWuD,IAJjB;AAKE,MAAA,YAAY,EAAE,KAAKvD,KAAL,CAAWyD,YAL3B;AAME,MAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWhC,KANpB;AAOE,MAAA,QAAQ,EAAE,KAAKmB,YAPjB;AAQE,MAAA,OAAO,EAAE,KAAKc,WARhB;AASE,MAAA,MAAM,EAAE,KAAKC,UATf;AAUE,MAAA,YAAY,EAAC,KAVf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OANF,EAmBE,UAAC,UAAD;AACE,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWL,YADtB;AAEE,MAAA,YAAY,EAAE,KAAKK,KAAL,CAAW5B,YAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,EAwBE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAgC,MAAA,YAAY,EAAE,KAAK+B,eAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAqE,UAAC,IAAD;AAAM,MAAA,IAAI,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArE,MADF,EAEE;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAiC,UAAC,IAAD;AAAM,MAAA,IAAI,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjC,MAFF,CAxBF,EA6BGhC,SA7BH,CADF;AAkCD;AAnO2B,CAAlB,CAAZ;AAsOAmD,MAAM,CAACC,OAAP,GAAiB/D,KAAjB","sourcesContent":["/** @jsx React.DOM */\r\nvar React = require('react/addons');\r\nvar _ = require('underscore');\r\nvar Icon = require('./Icon.js');\r\nvar InputError = require('./InputError.js');\r\nvar PasswordValidator = require('./PasswordValidator.js');\r\n\r\nvar cx = React.addons.classSet;\r\n\r\n\r\nvar Input = React.createClass({\r\n\r\n  getInitialState: function(){\r\n    var valid = (this.props.isValid && this.props.isValid()) || true;\r\n\r\n    return {\r\n      valid: valid,\r\n      empty: _.isEmpty(this.props.value),\r\n      focus: false,\r\n      value: null,\r\n      iconsVisible: !this.props.validator,\r\n      errorMessage: this.props.emptyMessage,\r\n      validator: this.props.validator,\r\n      validatorVisible: false,\r\n      type: this.props.type,\r\n      minCharacters: this.props.minCharacters,\r\n      requireCapitals: this.props.requireCapitals,\r\n      requireNumbers: this.props.requireNumbers,\r\n      forbiddenWords: this.props.forbiddenWords,\r\n      isValidatorValid: {\r\n        minChars: false,\r\n        capitalLetters: false,\r\n        numbers: false,\r\n        words: false,\r\n        all: false\r\n      },\r\n      allValidatorValid: false\r\n    };\r\n  },\r\n\r\n  handleChange: function(event){\r\n    this.setState({\r\n      value: event.target.value,\r\n      empty: _.isEmpty(event.target.value)\r\n    });\r\n\r\n    if(this.props.validator) {\r\n      this.checkRules(event.target.value)\r\n    }\r\n\r\n    // call input's validation method\r\n    if(this.props.validate) {\r\n      this.validateInput(event.target.value);\r\n    }\r\n\r\n    // call onChange method on the parent component for updating it's state\r\n    if(this.props.onChange) {\r\n      this.props.onChange(event);\r\n    }\r\n  },\r\n\r\n  validateInput: function (value) {\r\n    // trigger custom validation method in the parent component\r\n    if(this.props.validate && this.props.validate(value)){\r\n      this.setState({\r\n        valid: true,\r\n        errorVisible: false\r\n      });\r\n    } else {\r\n      this.setState({\r\n        valid: false,\r\n        errorMessage: !_.isEmpty(value) ? this.props.errorMessage : this.props.emptyMessage\r\n      });  \r\n    }\r\n\r\n  },\r\n\r\n  componentWillReceiveProps: function (newProps) {    \r\n    // perform update only when new value exists and not empty  \r\n    if(newProps.value) {\r\n      if(!_.isUndefined(newProps.value) && newProps.value.length > 0) {\r\n        if(this.props.validate) {\r\n          this.validateInput(newProps.value);\r\n        }\r\n        this.setState({\r\n          value: newProps.value,\r\n          empty: _.isEmpty(newProps.value)\r\n        });\r\n      }   \r\n    }\r\n  },\r\n\r\n  isValid: function () {\r\n    if(this.props.validate) {\r\n      if(_.isEmpty(this.state.value) || !this.props.validate(this.state.value)) {\r\n        this.setState({\r\n          valid: false,\r\n          errorVisible: true\r\n        });\r\n      }\r\n    }\r\n   \r\n    return this.state.valid;\r\n  },\r\n\r\n  handleFocus: function () {\r\n    this.setState({\r\n      focus: true,\r\n      validatorVisible: true\r\n    });\r\n\r\n    // hide error when validator is active\r\n    if(this.props.validator) {\r\n      this.setState({\r\n        errorVisible: false\r\n      })\r\n    }\r\n  },\r\n\r\n  handleBlur: function () {\r\n    this.setState({\r\n      focus: false,\r\n      errorVisible: !this.state.valid,\r\n      validatorVisible: false\r\n    });\r\n  },\r\n\r\n  mouseEnterError: function () {\r\n    this.setState({\r\n      errorVisible: true\r\n    });\r\n  },\r\n\r\n  hideError: function () {\r\n    this.setState({\r\n      errorVisible: false,\r\n      validatorVisible: false\r\n    });\r\n  },\r\n\r\n  // validator function\r\n  checkRules: function(value) {\r\n    var validData = {\r\n      minChars: !_.isEmpty(value) ? value.length >= parseInt(this.state.minCharacters): false,\r\n      capitalLetters: !_.isEmpty(value) ? this.countCapitals(value): false,\r\n      numbers: !_.isEmpty(value) ? this.countNumbers(value) > 0 : false,\r\n      words: !_.isEmpty(value) ? !this.checkWords(value) : false\r\n    }\r\n    var allValid = (validData.minChars && validData.capitalLetters && validData.numbers && validData.words);\r\n\r\n    this.setState({\r\n      isValidatorValid: validData,\r\n      allValidatorValid: allValid,\r\n      valid: allValid\r\n    })\r\n  },\r\n\r\n  countCapitals: function(value) {\r\n    var str = value;\r\n    return str.replace(/[^A-Z]/g, \"\").length;\r\n  },\r\n\r\n  countNumbers: function(value) {\r\n    return /\\d/.test(value);\r\n  },\r\n\r\n  checkWords: function(value) {\r\n    return  _.some(this.state.forbiddenWords, function (word) {\r\n      var matched = (word === value) ? true : \"\";\r\n      return matched\r\n    })\r\n  },\r\n\r\n  render: function(){\r\n\r\n    var inputGroupClasses = cx({\r\n      'input_group':     true,\r\n      'input_valid':     this.state.valid,\r\n      'input_error':     !this.state.valid,\r\n      'input_empty':     this.state.empty,\r\n      'input_hasValue':  !this.state.empty,\r\n      'input_focused':   this.state.focus,\r\n      'input_unfocused': !this.state.focus\r\n    });\r\n\r\n    var validator;\r\n\r\n    if(this.state.validator) {\r\n      validator = \r\n        <PasswordValidator\r\n          ref=\"passwordValidator\"\r\n          visible={this.state.validatorVisible}\r\n          name={this.props.text}\r\n          value={this.state.value}\r\n          validData={this.state.isValidatorValid}\r\n          valid={this.state.allValidatorValid}\r\n          forbiddenWords={this.state.forbiddenWords}\r\n          minCharacters={this.props.minCharacters}\r\n          requireCapitals={this.props.requireCapitals}\r\n          requireNumbers={this.props.requireNumbers}\r\n        />\r\n    }\r\n\r\n    return (\r\n      <div className={inputGroupClasses}>\r\n\r\n        <label className=\"input_label\" htmlFor={this.props.text}>\r\n          <span className=\"label_text\">{this.props.text}</span>\r\n        </label>\r\n\r\n        <input \r\n          {...this.props}\r\n          placeholder={this.props.placeholder} \r\n          className=\"input\" \r\n          id={this.props.text}\r\n          defaultValue={this.props.defaultValue} \r\n          value={this.state.value} \r\n          onChange={this.handleChange} \r\n          onFocus={this.handleFocus}\r\n          onBlur={this.handleBlur}\r\n          autoComplete=\"off\"\r\n        />\r\n\r\n        <InputError \r\n          visible={this.state.errorVisible} \r\n          errorMessage={this.state.errorMessage} \r\n        />\r\n\r\n        <div className=\"validationIcons\">\r\n          <i className=\"input_error_icon\" onMouseEnter={this.mouseEnterError}> <Icon type=\"circle_error\"/> </i>\r\n          <i className=\"input_valid_icon\"> <Icon type=\"circle_tick\"/> </i>\r\n        </div>\r\n\r\n        {validator}\r\n\r\n      </div>\r\n    );\r\n  }\r\n});\r\n\r\nmodule.exports = Input;"]},"metadata":{},"sourceType":"module"}